[{"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\theming.js":"1","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\Application.js":"2","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\utils.js":"3","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\ErrorHandler.js":"4","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\routes.js":"5","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Application\\Navigation.js":"6","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\About.js":"7","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\Home.js":"8","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Shared\\LoadingIndicator.js":"9","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Application\\AppTitle.js":"10","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Application\\LanguageSelection.js":"11","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\services\\LocalizationService.js":"12","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Shared\\Notifications.js":"13","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Home\\GetStartedMessage.js":"14","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\index.js":"15","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\Sentiment.js":"16","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\Classifier.js":"17","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\ObjectDetection.js":"18","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\services\\MachineLearningService.js":"19"},{"size":2696,"mtime":1611097785327,"results":"20","hashOfConfig":"21"},{"size":836,"mtime":1611097748800,"results":"22","hashOfConfig":"21"},{"size":782,"mtime":1611097777121,"results":"23","hashOfConfig":"21"},{"size":535,"mtime":1590521953940,"results":"24","hashOfConfig":"21"},{"size":934,"mtime":1611098172252,"results":"25","hashOfConfig":"21"},{"size":4741,"mtime":1611164036504,"results":"26","hashOfConfig":"21"},{"size":3070,"mtime":1611097727567,"results":"27","hashOfConfig":"21"},{"size":3256,"mtime":1611098287458,"results":"28","hashOfConfig":"21"},{"size":609,"mtime":1591236971747,"results":"29","hashOfConfig":"21"},{"size":684,"mtime":1611163732146,"results":"30","hashOfConfig":"21"},{"size":1421,"mtime":1594505555681,"results":"31","hashOfConfig":"21"},{"size":2218,"mtime":1611087263732,"results":"32","hashOfConfig":"21"},{"size":2970,"mtime":1590945184743,"results":"33","hashOfConfig":"21"},{"size":398,"mtime":1590521949194,"results":"34","hashOfConfig":"21"},{"size":668,"mtime":1611097751055,"results":"35","hashOfConfig":"21"},{"size":5516,"mtime":1611097736573,"results":"36","hashOfConfig":"21"},{"size":6630,"mtime":1611163281170,"results":"37","hashOfConfig":"21"},{"size":6397,"mtime":1611184546143,"results":"38","hashOfConfig":"21"},{"size":39121,"mtime":1611184568643,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t0yhme",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\theming.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\Application.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\utils.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\ErrorHandler.js",[],["81","82"],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\routes.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Application\\Navigation.js",["83"],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\About.js",["84"],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\Home.js",["85"],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Shared\\LoadingIndicator.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Application\\AppTitle.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Application\\LanguageSelection.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\services\\LocalizationService.js",["86"],"ï»¿const supportedLanguageMap = {\r\n\tenUS: 'English',\r\n\tzhCN: 'Chinese',\r\n\tesES: 'Spanish',\r\n};\r\n\r\nconst LocalizationService = () => {\r\n\tconst defaultLocale = 'enUS';\r\n\r\n\tconst getLocales = () => {\r\n\t\treturn supportedLanguageMap;\r\n\t};\r\n\r\n\tconst getUserLocale = () => {\r\n\t\tlet locale = window.localStorage.getItem('locale');\r\n\t\tif (locale) {\r\n\t\t\treturn locale;\r\n\t\t}\r\n\t\treturn defaultLocale;\r\n\t};\r\n\r\n\tconst setUserLocale = (loc) => {\r\n\t\twindow.localStorage.setItem('locale', loc);\r\n\t};\r\n\r\n\tconst getCurrentLocale = () => {\r\n\t\t// OPTIONAL ADDITION: lookup current user local via browser and populate found and return this\r\n\t\t// https://github.com/i18next/i18next-browser-languageDetector/blob/master/src/browserLookups/navigator.js\r\n\t\t// see also: https://github.com/i18next/i18next-browser-languageDetector/blob/master/src/browserLookups/querystring.js\r\n\t\t// or https://github.com/i18next/i18next-browser-languageDetector/blob/master/src/browserLookups/path.js\r\n\t\tlet found = [];\r\n\t\tif (found.length === 0) {\r\n\t\t\treturn getUserLocale();\r\n\t\t}\r\n\t\treturn found[0];\r\n\t};\r\n\r\n\tconst getLocalizedTextSet = async (keys, locale) => {\r\n\t\t// async import the locale file for given locale\r\n\t\t// and extract the set of localized text values for given keys\r\n\t\tlet textSet = {};\r\n\t\tconst localizedData = await getLocalizedData(locale);\r\n\t\tif (localizedData) {\r\n\t\t\tlet localizedTextSet = localizedData;\r\n\t\t\tconst keysLocalizedTextSet = Object.keys(localizedTextSet);\r\n\t\t\tfor (const desiredKey of keys) {\r\n\t\t\t\tfor (const key of keysLocalizedTextSet) {\r\n\t\t\t\t\tif (desiredKey === key) {\r\n\t\t\t\t\t\ttextSet[key] = localizedTextSet[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textSet;\r\n\t};\r\n\r\n\tconst getLocalizedData = async (localeCode) => {\r\n\t\t// get data from folder in public by locale using fetch\r\n\t\tconst localizedDataFilePath = process.env.PUBLIC_URL + `/i18n/${localeCode}.json`;\r\n\t\treturn fetch(localizedDataFilePath)\r\n\t\t\t.then((response) => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tlet msg = 'Error Reading data ' + err;\r\n\t\t\t\tconsole.log(msg);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn {\r\n\t\tsetUserLocale,\r\n\t\tgetUserLocale,\r\n\t\tgetLocales,\r\n\t\tgetCurrentLocale,\r\n\t\tgetLocalizedTextSet,\r\n\t};\r\n};\r\n\r\nexport default LocalizationService;\r\n","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Shared\\Notifications.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\components\\Home\\GetStartedMessage.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\index.js",[],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\Sentiment.js",["87","88","89","90","91","92"],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\Classifier.js",["93"],"E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\pages\\ObjectDetection.js",["94","95","96"],"import React, { useEffect, useState, useRef } from 'react';\n// Tensorflow\nimport * as tf from '@tensorflow/tfjs';\n// material-ui\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport PublishSharpIcon from '@material-ui/icons/PublishSharp';\n// Components\nimport LoadingIndicator from 'components/Shared/LoadingIndicator';\n// Services\nimport LocalizationService from 'services/LocalizationService';\nimport MachineLearningService from 'services/MachineLearningService';\n\nexport default function ObjectDetection() {\n\tconst [locData, setLocData] = useState({});\n\tconst [selectedFile, setSelectedFile] = useState(null);\n\tconst [model, setModel] = useState();\n\tconst [detectedObjects, setDetectedObjects] = useState(null);\n\tconst [objectDetectionIsOccuring, setObjectDetectionIsOccuring] = useState(false);\n\n\tconst selectedImageRef = useRef(null);\n\tconst requestFramRef = useRef(0);\n\n\tconst localizationService = LocalizationService();\n\tconst machineLearningService = MachineLearningService();\n\n\t// Example: https://react-tensorflow-example.vercel.app/objects\n\t// and page: https://github.com/joshuaellis/react-tensorflow/blob/master/example/src/containers/PageObjects/index.tsx\n\t// https://github.com/joshuaellis/react-tensorflow/blob/master/src/hooks/useObjectDetect.ts\n\tconst modelUrl = 'https://tfhub.dev/tensorflow/tfjs-model/ssd_mobilenet_v2/1/default/1';\n\t//const model_net = await tf.loadGraphModel(\"https://tfhub.dev/tensorflow/tfjs-model/ssd_mobilenet_v2/1/default/1\", { fromTFHub: true })\n\n\tuseEffect(() => {\n\t\tasync function loadLocalization() {\n\t\t\tconst locCode = localizationService.getUserLocale();\n\n\t\t\tconst locDataLoaded = await localizationService.getLocalizedTextSet(\n\t\t\t\t['objectdetection', 'objectdetectiondescription', 'objectdetectioninstructions', 'moreinfo'],\n\t\t\t\tlocCode\n\t\t\t);\n\t\t\tsetLocData(locDataLoaded);\n\t\t}\n\t\tloadLocalization();\n\t}, []);\n\n\tuseEffect(() => {\n\t\ttf.ready().then(() => {\n\t\t\tloadModel(modelUrl);\n\t\t});\n\t}, [modelUrl]);\n\n\tconst loadModel = async (modelUrlToLoad) => {\n\t\ttry {\n\t\t\tconst model = await tf.loadGraphModel(modelUrlToLoad, { fromTFHub: true });\n\t\t\t// warm up model with empty image\n\t\t\tconst zeroTensor = tf.zeros([1, 300, 300, 3], 'int32');\n\t\t\tconst result = await model.executeAsync(zeroTensor);\n\t\t\tawait Promise.all(result.map((t) => t.data()));\n\t\t\tresult.map((t) => t.dispose());\n\t\t\tzeroTensor.dispose();\n\n\t\t\tsetModel(model);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tconst handleSelectImage = (e) => {\n\t\tconst [file] = e.target.files;\n\t\tif (file) {\n\t\t\tconst reader = new FileReader();\n\t\t\tconst { current } = selectedImageRef;\n\t\t\tcurrent.file = file;\n\t\t\treader.onload = (e) => {\n\t\t\t\tcurrent.src = e.target.result;\n\t\t\t};\n\t\t\treader.readAsDataURL(file);\n\t\t\tsetSelectedFile(file);\n\t\t}\n\t};\n\n\tconst handleImageObjectDetection = async () => {\n\t\tsetObjectDetectionIsOccuring(true);\n\t\tawait performImageObjectDetection();\n\t};\n\n\tconst getTensorFromRawImage = (img) => {\n\t\tconst tensor = tf.tidy(() => {\n\t\t\tconst tens = tf.browser.fromPixels(img);\n\t\t\treturn tens.expandDims(0).cast('int32');\n\t\t});\n\t\treturn tensor;\n\t};\n\n\tconst performImageObjectDetection = async () => {\n\t\tconst tensorData = getTensorFromRawImage(selectedImageRef.current);\n\t\tconst width = selectedImageRef.current?.width ?? 0;\n\t\tconst height = selectedImageRef.current?.height ?? 0;\n\t\tconst classes = machineLearningService.getCocoSSDClasses();\n\t\tconst returns = 5;\n\t\tconst\tminConfidence = 0;\n\n\t\tconst detectedObjects = await machineLearningService.detectObjects(\n\t\t\tmodel,\n\t\t\ttensorData,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tclasses,\n\t\t\trequestFramRef,\n\t\t\treturns,\n\t\t\t\n\t\t);\n\t\tsetDetectedObjects(detectedObjects);\n\t\tsetObjectDetectionIsOccuring(false);\n\t};\n\n\tconst ObjectDetectionResult = () => {\n\t\tif (!objectDetectionIsOccuring && detectedObjects && detectedObjects.length > 0) {\n\t\t\treturn (\n\t\t\t\t<Card className=\"card white-bg-color bl-1 bb-1\">\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t{detectedObjects.map((object) => (\n\t\t\t\t\t\t\t<div key={object.class}>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<span className=\"text-bold\">Classification:</span> {object.class}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<span className=\"text-bold\">Probability:</span> {object.probability}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <></>;\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container spacing={0}>\n\t\t\t<Grid item xs={12} className=\"contentpanel-site\">\n\t\t\t\t<h3>{locData.objectdetection}</h3>\n\t\t\t\t<p>\n\t\t\t\t\t{locData.objectdetectioninstructions}{' '}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"ml-2\"\n\t\t\t\t\t\thref={modelUrl}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener\"\n\t\t\t\t\t>\n\t\t\t\t\t\tView Model\n\t\t\t\t\t</Button>\n\t\t\t\t</p>\n\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t<Grid item xs={12} md={6} lg={6} xl={6}>\n\t\t\t\t\t\t<Card className=\"card white-bg-color bl-1 bb-1\">\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\taccept=\"image/jpeg\"\n\t\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t\t\tid=\"faceImage\"\n\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\tonChange={handleSelectImage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Tooltip title=\"Select Image\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"faceImage\">\n\t\t\t\t\t\t\t\t\t\t<IconButton color=\"primary\" aria-label=\"upload image\" component=\"span\">\n\t\t\t\t\t\t\t\t\t\t\t<PublishSharpIcon fontSize=\"large\" />\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<label>{selectedFile ? selectedFile.name : 'Select Image'}</label>. . .\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t{selectedFile ? (\n\t\t\t\t\t\t\t\t\t<Button color=\"primary\" onClick={() => handleImageObjectDetection()}>\n\t\t\t\t\t\t\t\t\t\tPerform Object Detection\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<LoadingIndicator display={objectDetectionIsOccuring} size={40} />\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12} md={6} lg={6} xl={6}>\n\t\t\t\t\t\t<ObjectDetectionResult />\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t\t\t\tref={selectedImageRef}\n\t\t\t\t\t\t\tsrc={selectedFile}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '50%',\n\t\t\t\t\t\t\t\tvisibility: selectedFile != null ? 'visible' : 'hidden',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\talt=\"Selected file to analyze\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","E:\\Data\\WorkArea\\Projects\\GitRepos\\SpinningIdeas\\machinelearning-tensorflow\\src\\services\\MachineLearningService.js",["97","98","99","100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":77,"column":5,"nodeType":"109","endLine":77,"endColumn":7,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"108","line":39,"column":5,"nodeType":"109","endLine":39,"endColumn":7,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":40,"column":5,"nodeType":"109","endLine":40,"endColumn":7,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":1,"nodeType":"115","messageId":"116","fix":"117"},{"ruleId":"118","severity":1,"message":"119","line":17,"column":10,"nodeType":"120","messageId":"121","endLine":17,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":49,"column":5,"nodeType":"109","endLine":49,"endColumn":7,"suggestions":"122"},{"ruleId":"107","severity":1,"message":"123","line":56,"column":5,"nodeType":"109","endLine":56,"endColumn":7,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":81,"column":18,"nodeType":"127","messageId":"128","endLine":81,"endColumn":19,"suggestions":"129"},{"ruleId":"125","severity":1,"message":"130","line":81,"column":21,"nodeType":"127","messageId":"128","endLine":81,"endColumn":22,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":172,"column":11,"nodeType":"134","messageId":"135","endLine":172,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":45,"column":5,"nodeType":"109","endLine":45,"endColumn":7,"suggestions":"136"},{"ruleId":"107","severity":1,"message":"108","line":49,"column":5,"nodeType":"109","endLine":49,"endColumn":7,"suggestions":"137"},{"ruleId":"118","severity":1,"message":"138","line":105,"column":9,"nodeType":"120","messageId":"121","endLine":105,"endColumn":16},{"ruleId":"118","severity":1,"message":"139","line":106,"column":9,"nodeType":"120","messageId":"121","endLine":106,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":1,"column":1,"nodeType":"115","messageId":"116","fix":"140"},{"ruleId":"141","severity":1,"message":"142","line":802,"column":75,"nodeType":"134","messageId":"143","endLine":802,"endColumn":76},{"ruleId":"141","severity":1,"message":"142","line":904,"column":77,"nodeType":"134","messageId":"143","endLine":904,"endColumn":78},{"ruleId":"141","severity":1,"message":"142","line":1037,"column":74,"nodeType":"134","messageId":"143","endLine":1037,"endColumn":75},{"ruleId":"141","severity":1,"message":"142","line":1156,"column":78,"nodeType":"134","messageId":"143","endLine":1156,"endColumn":79},{"ruleId":"141","severity":1,"message":"142","line":1166,"column":76,"nodeType":"134","messageId":"143","endLine":1166,"endColumn":77},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'localizationService'. Either include it or remove the dependency array.","ArrayExpression",["146"],["147"],["148"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"149","text":"150"},"no-unused-vars","'padSequences' is defined but never used.","Identifier","unusedVar",["151"],"React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["152"],"no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["153","154"],"Unnecessary escape character: \\!.",["155","156"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf",["157"],["158"],"'returns' is assigned a value but never used.","'minConfidence' is assigned a value but never used.",{"range":"159","text":"150"},"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},{"desc":"160","fix":"163"},[-1,0],"",{"desc":"160","fix":"164"},{"desc":"165","fix":"166"},{"messageId":"167","fix":"168","desc":"169"},{"messageId":"170","fix":"171","desc":"172"},{"messageId":"167","fix":"173","desc":"169"},{"messageId":"170","fix":"174","desc":"172"},{"desc":"160","fix":"175"},{"desc":"160","fix":"176"},[-1,0],"Update the dependencies array to be: [localizationService]",{"range":"177","text":"178"},{"range":"179","text":"178"},{"range":"180","text":"178"},{"range":"181","text":"178"},"Update the dependencies array to be: [url]",{"range":"182","text":"183"},"removeEscape",{"range":"184","text":"150"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"185","text":"186"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"187","text":"150"},{"range":"188","text":"186"},{"range":"189","text":"178"},{"range":"190","text":"178"},[2232,2234],"[localizationService]",[1047,1049],[1197,1199],[1873,1875],[1975,1977],"[url]",[2478,2479],[2478,2478],"\\",[2481,2482],[2481,2481],[1803,1805],[2160,2162]]