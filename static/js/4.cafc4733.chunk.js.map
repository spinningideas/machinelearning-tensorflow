{"version":3,"sources":["components/Home/GetStartedMessage.js","pages/Home.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js"],"names":["GetStartedMessage","props","displayGetStarted","Grid","container","spacing","item","xs","className","locData","getstartedmessage","withRouter","useState","setLocData","localizationService","LocalizationService","useEffect","a","locCode","getUserLocale","getLocalizedTextSet","locDataLoaded","loadLocalization","homepagewelcome","Card","CardContent","sentiment","sentimentdescription","CardActions","Button","color","component","Link","to","seeexample","classifier","classifierdescription","objectdetection","objectdetectiondescription","React","ref","classes","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","_props$component","Component","padding","paddingBottom","_props$disableSpacing","disableSpacing","display","alignItems","marginLeft"],"mappings":"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","file":"static/js/4.cafc4733.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction GetStartedMessage(props) {\r\n  if (props.displayGetStarted === false) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <p className=\"whitetext\">{props.locData.getstartedmessage}</p>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default GetStartedMessage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n// material-ui\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\n// services\r\nimport LocalizationService from 'services/LocalizationService';\r\n// components\r\nimport GetStartedMessage from 'components/Home/GetStartedMessage';\r\n\r\nfunction Home() {\r\n\tconst [locData, setLocData] = useState({});\r\n\r\n\tconst localizationService = LocalizationService();\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function loadLocalization() {\r\n\t\t\tconst locCode = localizationService.getUserLocale();\r\n\t\t\tconst locDataLoaded = await localizationService.getLocalizedTextSet(\r\n\t\t\t\t[\r\n\t\t\t\t\t'welcome',\r\n\t\t\t\t\t'homepagewelcome',\r\n\t\t\t\t\t'getstartedmessage',\r\n\t\t\t\t\t'sentiment',\r\n\t\t\t\t\t'sentimentdescription',\r\n\t\t\t\t\t'seeexample',\r\n\t\t\t\t\t'classifier',\r\n\t\t\t\t\t'classifierdescription',\r\n\t\t\t\t\t'objectdetection',\r\n\t\t\t\t\t'objectdetectiondescription',\r\n\t\t\t\t],\r\n\t\t\t\tlocCode\r\n\t\t\t);\r\n\t\t\tsetLocData(locDataLoaded);\r\n\t\t}\r\n\t\tloadLocalization();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Grid container spacing={0}>\r\n\t\t\t<Grid item xs={12} className=\"contentpanel-site\">\r\n\t\t\t\t<h2>{locData.homepagewelcome}</h2>\r\n\r\n\t\t\t\t<Grid container spacing={0}>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<GetStartedMessage locData={locData} displayGetStarted={true} />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} className=\"pt-1\">\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className=\"pt-1 pb-1\">\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">{locData.sentiment}</h4>\r\n\t\t\t\t\t\t\t\t\t\t<p>{locData.sentimentdescription}</p>\r\n\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"mt-3\" color=\"secondary\" component={Link} to=\"/sentiment\">\r\n\t\t\t\t\t\t\t\t\t\t\t{locData.seeexample}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className=\"pt-1\">\r\n\t\t\t\t\t\t\t\t<Card className=\"card white-bg-color bl-1 bb-1\">\r\n\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">{locData.classifier}</h4>\r\n\t\t\t\t\t\t\t\t\t\t<p>{locData.classifierdescription}</p>\r\n\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"mt-3\" color=\"secondary\" component={Link} to=\"/classifier\">\r\n\t\t\t\t\t\t\t\t\t\t\t{locData.seeexample}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item xs={12} className=\"pt-1\">\r\n\t\t\t\t\t\t\t\t<Card className=\"card white-bg-color bl-1 bb-1\">\r\n\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">{locData.objectdetection}</h4>\r\n\t\t\t\t\t\t\t\t\t\t<p>{locData.objectdetectiondescription}</p>\r\n\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t<CardActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"mt-3\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\t\t\t\tto=\"/objectdetection\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{locData.seeexample}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);"],"sourceRoot":""}